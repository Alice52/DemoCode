<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="cn.edu.ntu.spring.aop"/>

    <!-- enable aspectj with annotation: generate proxy for Aspect's Advice-->
    <aop:aspectj-autoproxy/>

    <!--
        <aop:config>
            <aop:aspect ref="loggingAspect" order="2">
                <aop:pointcut id="pointcut" expression="execution(* cn.edu.ntu.spring.aop.before.proxy.*.*(..))"/>

                <aop:before method="preAdvice" pointcut-ref="pointcut"/>
                <aop:after method="postAdvice" pointcut-ref="pointcut"/>
                <aop:after-returning method="reAdvice" pointcut-ref="pointcut" returning="result"/>
                <aop:after-throwing method="throwingAdvice" pointcut-ref="pointcut" throwing="ex"/>

                <aop:around method="aroundAdvice" pointcut-ref="pointcut"/>
            </aop:aspect>
        </aop:config>
    -->

</beans>